#! /bin/bash

dmScore=0
saScore=0
vmScore=0

echo $1
testerDirectory="/home/ssdavis/154/p4/Testing"

if [ $# -ne 1 ]; then
  echo "usage testhw: testhw source_directory" 1>&2
  exit
fi

if [[ $1 =~ Testing ]]; then # Use from this directory is not allowed
  echo "You may not use Testing as your own source directory!"  1>&2
  exit
fi

cd $1
rm -f *.out *.o dm-out* sa-out* core* vm-out*  &> /dev/null

echo -n "Scores from p5 for " > results.txt

if [ -e authors.csv ]; then
  dos2unix -q authors.csv
  awk -F, '/@/ {printf"%s,%s ", $2, $3}' authors.csv >> results.txt
  awk -F, '/@/ {printf"%s,%s\n", $2, $3}' authors.csv > names.txt
  awk -F, '/@/ {printf"%s,", $1}' authors.csv > addresses
else
  echo  "You need to create an authors.csv file!!!!"  >> results.txt
 echo -e "\nNote that format is: e-mail<comma>last name<comma>first name" >> results.txt
  echo "For example: ssdavis@ucdavis.edu,Davis,Sean"  >> results.txt
  echo "$1@ucdavis.edu" > addresses
  finger ${PWD##*/} | awk 'NR == 1 {printf"%s,%s", $5, $4}' > names.txt
fi

echo -en "\nAddresses used: " >> results.txt
cat addresses >> results.txt
echo " " >> results.txt
echo "Directory: $1"

echo "dmcache.cpp:"
echo "dmcache.cpp:" >> results.txt
g++ dmcache.cpp

if [ -s a.out ]; then
  fileNum=14

  while [[ $fileNum -lt 17 ]]; do
    rm dm-out.* &> /dev/null
    echo "$fileNum:"
    echo "Testing dmtest-8-64-1000-$fileNum.txt: " >> results.txt
    echo a.out $testerDirectory/dmtest-8-32-1000-$fileNum.txt
    (a.out $testerDirectory/dmtest-8-32-1000-$fileNum.txt)&
    sleep 3
    pkill a.out &> /dev/null
    rm core &> /dev/null
    mv dm-out.txt dm-out-8-32-1000-$fileNum.txt
    diff dm-out-8-32-1000-$fileNum.txt $testerDirectory/dm-out-8-32-1000-$fileNum.txt > temp
    

    if [[ ( ! -e dm-out-8-32-1000-$fileNum.txt) || ( -s temp ) ]]; then
      echo -e "\nNot OK" >> results.txt
    else
      echo OK >> results.txt
      (( dmScore += 5 ))
    fi

    fileNum=$((fileNum + 1))
  done # while fileNum < 17 
fi

rm *.out
echo "sacache.cpp:"
echo -e "\nsacache.cpp: " >> results.txt
g++ sacache.cpp

if [ -s a.out ]; then
  fileNum=14

  while [[ $fileNum -lt 17 ]]; do
    rm sa-out.* >& /dev/null
    echo "$fileNum:"
    echo "Testing satest-1000-$fileNum.txt: " >> results.txt
    echo a.out $testerDirectory/satest-1000-$fileNum.txt 
    (a.out $testerDirectory/satest-1000-$fileNum.txt)&
    sleep 3
    pkill a.out &> /dev/null
    rm core &> /dev/null
    mv sa-out.txt sa-out-1000-$fileNum.txt
    diff sa-out-1000-$fileNum.txt $testerDirectory/sa-out-1000-$fileNum.txt > temp

    if [[ ( ! -e  sa-out-1000-$fileNum.txt) || ( -s temp ) ]]; then
      echo -e "\nNot OK" >> results.txt
    else
      echo OK >> results.txt
      (( saScore += 5 ))
    fi

    fileNum=$((fileNum + 1))
  done # while fileNum < 17 
fi


finalScore=$(( $dmScore + $saScore ))
echo "Total score: $dmScore + $saScore = $finalScore" >> results.txt

# mailx -s "ECS 154a P5 Test Results" `cat addresses` < results.txt


# awk 'NR == 1 {printf"%s,",$0}' names.txt >> ../results.csv
#echo "${1%%/},$finalScore,$dmScore,$saScore" >> ../results.csv
#authorCount=$(grep "@" authors.csv | wc -l)

#if [ $authorCount -gt 1 ]; then
#  awk 'NR == 2 {printf"%s,", $0}' names.txt >> ../results.csv
#  echo "${1%%/},$finalScore,$dmScore,$saScore" >> ../results.csv
#fi

